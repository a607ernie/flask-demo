kind: pipeline
type: docker
name: default

steps:
- name: run
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml up -d
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_create_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_create_resource.py || (docker-compose logs web && exit 1)
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_delete_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_delete_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_get_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_get_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_update_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_update_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: cleanup
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml down -v
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: build_and_push
  image: plugins/docker
  settings:
    repo: ${harbor_registry}/flask-demo/flask
    tags: latest
    registry: ${harbor_registry}
    username:
      from_secret: harbor_username
    password:
      from_secret: harbor_password
  commands:
    - echo $harbor_password | docker login -u $harbor_username --password-stdin ${harbor_registry}
    - docker build -t ${harbor_registry}/flask-demo/flask .
    - docker push ${harbor_registry}/flask-demo/flask
  when:
    status:
      - success

      
volumes:
  - name: docker_socket
    host:
      path: /var/run/docker.sock