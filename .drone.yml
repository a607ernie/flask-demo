kind: pipeline
type: docker
name: default

steps:
- name: run
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml up -d
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_create_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_create_resource.py || (docker-compose logs web && exit 1)
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_delete_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_delete_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_get_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_get_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_update_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_update_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: cleanup
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml down -v
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: debug
  image: alpine
  environment:
    HARBOR_REGISTRY_SECRET:
      from_secret: nginx_repo
    REPO_NAME: $HARBOR_REGISTRY_SECRET/flask-demo/nginx

  commands:
  - echo $REPO_NAME
  - echo $HARBOR_REGISTRY_SECRET
  - env

- name: build_and_push
  image: plugins/docker
  environment:
    HARBOR_REGISTRY:
      from_secret: harbor_registry
    REPO_NAME: 
      from_secret: nginx_repo

  settings:
    dockerfile: Dockerfile.nginx
    insecure: true
    tags: latest
    repo: $REPO_NAME
    registry: 
      from_secret: harbor_registry
    username:
      from_secret: harbor_username
    password:
      from_secret: harbor_password


      
volumes:
  - name: docker_socket
    host:
      path: /var/run/docker.sock