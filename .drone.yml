kind: pipeline
type: docker
name: default

steps:
- name: run
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml up -d
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_create_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_create_resource.py || (docker-compose logs web && exit 1)
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_delete_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_delete_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_get_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_get_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: test_update_resource
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose exec -T web pytest tests/test_update_resource.py
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock

- name: cleanup
  image: docker/compose:1.29.1
  privileged: true
  commands:
    - docker-compose -f docker-compose.yaml down -v
  volumes:
    - name: docker_socket
      path: /var/run/docker.sock
  
- name: debug
  image: alpine
  commands:
  - env

- name: set_variables
  image: drone/envsubst
  environment:
    HARBOR_REGISTRY_SECRET:
      from_secret: harbor_registry
  commands:
    - export HARBOR_REPO="${HARBOR_REGISTRY_SECRET}:8081/flask-demo/nginx"
    - export HARBOR_REGISTRY="${HARBOR_REGISTRY_SECRET}:8081"
    - echo "HARBOR_REPO=$HARBOR_REPO" >> /drone/src/variables.env
    - echo "HARBOR_REGISTRY=$HARBOR_REGISTRY" >> /drone/src/variables.env

- name: build_and_push
  image: plugins/docker
  settings:
    dockerfile: Dockerfile.nginx
    insecure: true
    tags: latest
    repo: 
      from_secret: harbor_repo
    registry: 
      from_secret: $harbor_registry
    username:
      from_secret: $harbor_username
    password:
      from_secret: $harbor_password


      
volumes:
  - name: docker_socket
    host:
      path: /var/run/docker.sock